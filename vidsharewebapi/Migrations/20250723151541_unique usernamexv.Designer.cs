// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VidShareWebApi.Data;

#nullable disable

namespace vidsharewebapi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250723151541_unique usernamexv")]
    partial class uniqueusernamexv
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("VidShareWebApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2025, 7, 23, 15, 15, 41, 810, DateTimeKind.Utc).AddTicks(9250),
                            Email = "abc@gmail.com",
                            Password = "xvasdfasf",
                            PasswordSalt = "salt",
                            UserName = "harshit_k_singh"
                        });
                });

            modelBuilder.Entity("VidShareWebApi.Models.VideoDownloadUrls", b =>
                {
                    b.Property<int>("VideoDownloadUrlId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("VideoDownloadUrlId"));

                    b.Property<string>("DownloadUrl1080")
                        .HasColumnType("longtext");

                    b.Property<string>("DownloadUrl480")
                        .HasColumnType("longtext");

                    b.Property<string>("DownloadUrl720")
                        .HasColumnType("longtext");

                    b.Property<string>("DownloadUrlRaw")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("KeyId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PreSignedUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("VideoInfoId")
                        .HasColumnType("int");

                    b.HasKey("VideoDownloadUrlId");

                    b.HasIndex("VideoInfoId");

                    b.ToTable("VideoDownloadUrls");
                });

            modelBuilder.Entity("VidShareWebApi.Models.VideoInfo", b =>
                {
                    b.Property<int>("VideoInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("VideoInfoId"));

                    b.Property<string>("KeyId")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("VideoInfoId");

                    b.HasIndex("UserId");

                    b.ToTable("VideoInfos");
                });

            modelBuilder.Entity("VidShareWebApi.Models.VideoDownloadUrls", b =>
                {
                    b.HasOne("VidShareWebApi.Models.VideoInfo", "VideoInfo")
                        .WithMany("VideoDownloadUrls")
                        .HasForeignKey("VideoInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VideoInfo");
                });

            modelBuilder.Entity("VidShareWebApi.Models.VideoInfo", b =>
                {
                    b.HasOne("VidShareWebApi.Models.User", "User")
                        .WithMany("Videos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VidShareWebApi.Models.User", b =>
                {
                    b.Navigation("Videos");
                });

            modelBuilder.Entity("VidShareWebApi.Models.VideoInfo", b =>
                {
                    b.Navigation("VideoDownloadUrls");
                });
#pragma warning restore 612, 618
        }
    }
}
